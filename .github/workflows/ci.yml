# This is a basic workflow to help you get started with Actions

name: CI/CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main, feature/** ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2


      # Runs a set of commands using the runners shell
      
      - name: Setup Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.6
          architecture: x64
          
      - name: Install dependencies
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.6
          architecture: x64

      - run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt
          
      - name: Run unit tests  
        run:  python unit-tests.py
        
      - name: Run unit tests with coverage  
        run: |
          coverage run --omit 'mypython/*' -m unittest unit-tests.py && coverage report -m --fail-under=80

      - name: Run integration tests
        run: behave tests 
  testDev:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Newman Action
    # You may pin to the exact commit or the version.
    # uses: matt-ball/newman-action@0659e9b8d056c0d03d94e1dbfce380512088b566
        uses: matt-ball/newman-action@v0.2.4
        with:
          # Postman API key
          apiKey: ${{secrets.POSTMAN_API_KEY}}
            # Collection to use
          collection: tests/postman/api-calc-test.postman_collection.json
            # Environment to use
          environment: tests/postman/enviroments/Development.postman_environment.json
            # Path to CSV or JSON data file
          iterationData: tests/postman/testData.csv

    
  
  deploy:
    needs: testDev
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build, Push and Release a Docker container to Heroku.
        uses: gonuit/heroku-docker-deploy@v1.3.3
        with:
    # Name of the heroku application to which the build is to be sent.
         heroku_app_name: ${{secrets.HEROKU_APP_NAME}}

    # The email address associated with your Heroku account.
         email: ${{secrets.HEROKU_EMAIL}} 
    # Heroku API key associated with provided user's email.
         heroku_api_key: ${{secrets.HEROKU_API_KEY}}

      


      
      
    

 
          
